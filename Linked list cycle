// To find whether there is a loop in a linked list or not if so then return true or else false
// https://leetcode.com/explore/challenge/card/february-leetcoding-challenge-2021/584/week-1-february-1st-february-7th/3627/
// use floyd cycle finding algorithm.

bool detectcycle(Node *head){
  if(head == NULL || head->next == NULL){
    return 0;
  }
  Node *slow = head;
  Node *fast = head;
  while(slow && fast && fast->next){
    slow = slow->next;
    fast = fast->next->next;
    if(slow == fast){
      return 1;
    }
  }
  return 0;
}
