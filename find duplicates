// https://leetcode.com/problems/find-the-duplicate-number/
// we have to do it in O(1) space and O(n) time complexity.
// we can use the basic concept of hasmap .
#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi;

int findDuplicate(vi& nums){
  int n = nums.size();
  for(int i = 0; i<n; i++){
    nums[nums[i]%n] = nums[nums[i]%n] + n;
  }
  for(int i = 0; i<n; i++){
    if(nums[i] >= n*2){
      return i;
    }
  }
   return -1;
}
int main(){
  int n, data;
  cin >> n;
  vi nums;
  for(int i = 0; i<n; i++){
      cin >> data;
      nums.push_back(data);
  }
  cout << findDuplicate(nums);
}
